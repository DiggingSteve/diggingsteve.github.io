{"version":3,"sources":["main.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Div","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","Divloop","initFlag","direction","isEditing","hasChild","initDiv","initBtn","organizeDom","horizontalEvent","verticalEvent","divConfirm","prototype","div","appendChild","div1","border","div2","btnHorizontal","btnVertical","btnCancel","document","body","createElement","classList","add","className","getOffsetTop","dom","dis","flag","offsetParent","indexOf","offsetTop","getOffsetLeft","offsetLeft","getRootChild","obj","getAttribute","parent","borderDrag","_this","onmousedown","dir","console","log","width","clientWidth","verticalDragEvent","height","clientHeight","horizontalDragEvent","onmouseup","onmousemove","_this2","leftPercent","clientX","rightPercent","style","stopPropagation","_this3","topPercent","clientY","bottomPercent","cancelEvent","_this4","onclick","resetChild","apply","getParentDivObj","child1","remove","child2","background","opacity","_this5","setAttribute","currentTop","_this6","currentLeft","_this7","color","randomColor","cssFloat","split","map","v","Math","floor","random","join","assert","2","./divloop.js","3","compare","b","x","y","len","min","isBuffer","Buffer","_isBuffer","pToString","toString","isView","arrbuf","ArrayBuffer","DataView","buffer","getName","func","util","isFunction","functionsHaveNames","name","str","match","regex","truncate","slice","inspect","something","rawname","getMessage","actual","operator","expected","fail","message","stackStartFunction","AssertionError","ok","_deepEqual","strict","memos","isDate","getTime","isRegExp","source","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","Uint8Array","actualIndex","push","objEquiv","isArguments","object","actualVisitedObjects","undefined","isPrimitive","getPrototypeOf","aIsArgs","bIsArgs","pSlice","key","ka","objectKeys","kb","sort","notDeepStrictEqual","expectedException","test","isPrototypeOf","_tryBlock","block","error","_throws","shouldThrow","userProvidedMessage","isUnwantedException","isError","isUnexpectedException","hasOwn","hasOwnProperty","Array","options","generatedMessage","captureStackTrace","err","stack","out","fn_name","idx","next_line","substring","inherits","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","strictEqual","notStrictEqual","doesNotThrow","ifError","keys","util/","4","create","ctor","superCtor","super_","constructor","enumerable","writable","configurable","TempCtor","5","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","run","Item","array","noop","process","nextTick","args","arguments","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","6","arg","copy","fill","readUInt8","7","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","styles","arrayToHash","hash","forEach","val","recurseTimes","ret","isString","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","RegExp","Date","base","braces","isArray","toUTCString","output","formatArray","formatProperty","pop","reduceToSingleString","simple","JSON","stringify","replace","isNumber","isNull","String","desc","getOwnPropertyDescriptor","get","set","line","substr","numLinesEst","reduce","prev","cur","ar","isNullOrUndefined","isSymbol","re","isObject","objectToString","d","pad","timestamp","time","getHours","getMinutes","getSeconds","getDate","months","getMonth","prop","formatRegExp","format","objects","Number","_","deprecate","fn","msg","deprecated","warned","throwDeprecation","traceDeprecation","trace","noDeprecation","debugEnviron","debugs","debuglog","NODE_DEBUG","toUpperCase","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","string","date","regexp","origin","./support/isBuffer","_process"],"mappings":"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","file":"../main.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Div = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _assert = _dereq_(\"assert\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Divloop = function () {\n    function Divloop(initFlag) {\n        _classCallCheck(this, Divloop);\n\n        this.direction = null;\n        this.isEditing = false;\n        this.hasChild = this.hasChild || false;\n        this.initDiv();\n        this.initBtn();\n        this.organizeDom(initFlag);\n        this.horizontalEvent();\n        this.verticalEvent();\n\n        this.divConfirm();\n    }\n\n    Divloop.prototype.organizeDom = function organizeDom(initFlag) {\n        this.div.appendChild(this.div1);\n        this.div1.appendChild(this.border);\n        this.div.appendChild(this.div2);\n        this.div.appendChild(this.btnHorizontal);\n        this.div.appendChild(this.btnVertical);\n        this.div.appendChild(this.btnCancel);\n        initFlag || document.body.appendChild(this.div);\n    };\n\n    Divloop.prototype.initDiv = function initDiv() {\n        this.div = document.createElement(\"div\");\n        this.div1 = document.createElement(\"div\");\n        this.div2 = document.createElement(\"div\");\n        this.border = document.createElement(\"div\");\n        this.div.classList.add(\"father\");\n        this.div1.className = \"child\";\n        this.div2.className = \"child\";\n    };\n\n    Divloop.prototype.initBtn = function initBtn() {\n        this.btnVertical = document.createElement(\"i\");\n        this.btnHorizontal = document.createElement(\"i\");\n        this.btnHorizontal.classList.add(\"iconfont\");\n        this.btnHorizontal.classList.add(\"icon-hengxian\");\n        this.btnVertical.classList.add(\"iconfont\");\n        this.btnVertical.classList.add(\"icon-shu\");\n        this.btnHorizontal.classList.add(\"btnHorizontal\");\n        this.btnVertical.classList.add(\"btnVertical\");\n        this.btnCancel = document.createElement(\"i\");\n        this.btnCancel.classList.add(\"btnCancel\");\n        this.btnCancel.classList.add(\"btnCancel\");\n        this.btnCancel.classList.add(\"iconfont\");\n        this.btnCancel.classList.add(\"icon-cross\");\n    };\n\n    Divloop.prototype.getOffsetTop = function getOffsetTop(dom, dis) {\n        var flag = dom.offsetParent.className.indexOf(\"father\") != -1 || dom.offsetParent.className.indexOf(\"child\") >= 0;\n        dis += dom.offsetTop;\n        if (flag) {\n            return this.getOffsetTop(dom.offsetParent, dis);\n        } else return dis;\n    };\n\n    Divloop.prototype.getOffsetLeft = function getOffsetLeft(dom, dis) {\n\n        var flag = dom.offsetParent.className.indexOf(\"father\") != -1 || dom.offsetParent.className.indexOf(\"child\") >= 0;\n        dis += dom.offsetLeft;\n        if (flag) {\n            return this.getOffsetLeft(dom.offsetParent, dis);\n        } else return dis;\n    };\n\n    Divloop.prototype.getRootChild = function getRootChild(obj, direction) {\n        if (!!obj) {\n            if (obj.div1.getAttribute(\"dir\") == direction) {\n                return obj;\n            }\n            if (obj.div1.getAttribute(\"dir\") == direction && obj.parent && obj.parent.div1.getAttribute(\"dir\") != direction) {\n                return this.getRootChild(obj.parent, direction);\n            } else {\n                return this.getRootChild(obj.parent, direction);\n            }\n        }\n    };\n\n    Divloop.prototype.borderDrag = function borderDrag() {\n        var _this = this;\n\n        this.border.onmousedown = function (e) {\n            var dir = _this.div1.getAttribute(\"dir\");\n            console.log(dir);\n            if (dir === \"v\") {\n                var width = _this.div.clientWidth;\n\n                var offsetLeft = _this.getOffsetLeft(_this.div, 0);\n                _this.verticalDragEvent(width, offsetLeft);\n            }\n            if (dir == \"h\") {\n                var height = _this.div1.clientHeight + _this.div2.clientHeight + _this.border.clientHeight;\n\n                var offsetTop = _this.getOffsetTop(_this.div, 0);\n                _this.horizontalDragEvent(height, offsetTop);\n            }\n        };\n        this.div.onmouseup = function () {\n            _this.div.onmousemove = null;\n        };\n    };\n\n    Divloop.prototype.verticalDragEvent = function verticalDragEvent(width, offsetLeft) {\n        var _this2 = this;\n\n        this.div.onmousemove = function (e) {\n            var leftPercent = (e.clientX - offsetLeft) / width;\n            var rightPercent = 1 - leftPercent;\n            _this2.div1.style.width = leftPercent * 100 + \"%\";\n            _this2.div2.style.width = rightPercent * 100 + \"%\";\n            e.stopPropagation();\n        };\n    };\n\n    Divloop.prototype.horizontalDragEvent = function horizontalDragEvent(height, offsetTop) {\n        var _this3 = this;\n\n        this.div.onmousemove = function (e) {\n            var topPercent = (e.clientY - offsetTop) / height;\n            var bottomPercent = 1 - topPercent;\n            _this3.div1.style.height = topPercent * 100 + \"%\";\n            _this3.div2.style.height = bottomPercent * 100 + \"%\";\n            e.stopPropagation();\n        };\n    };\n\n    Divloop.prototype.cancelEvent = function cancelEvent() {\n        var _this4 = this;\n\n        this.btnCancel.onclick = function (e) {\n            console.log(_this4.div);\n            if (!!_this4.parent) _this4.parent.div.appendChild(_this4.parent.btnCancel);\n            _this4.resetChild.apply(_this4);\n\n            e.stopPropagation();\n        };\n    };\n\n    Divloop.prototype.getParentDivObj = function getParentDivObj() {\n        if (this.hasChild) return this.getParentDivObj.apply(this.child1);else return this;\n    };\n\n    Divloop.prototype.resetChild = function resetChild() {\n        if (!this.hasChild) return;\n        this.child1.div.remove();\n        this.child2.div.remove();\n        this.div.appendChild(this.btnHorizontal);\n        this.div.appendChild(this.btnVertical);\n        this.border.classList.remove(\"border-v\");\n        this.border.classList.remove(\"border-h\");\n        this.div1.style.background = \"transparent\";\n        this.div2.style.background = \"transparent\";\n        this.div1.style.width = \"100%\";\n        this.div2.style.width = \"100%\";\n        this.div1.style.height = \"100%\";\n        this.div2.style.height = \"100%\";\n        this.hasChild = false;\n        this.btnCancel.style.opacity = 0;\n    };\n\n    Divloop.prototype.horizontalEvent = function horizontalEvent() {\n        var _this5 = this;\n\n        this.btnHorizontal.onclick = function (e) {\n            _this5.isEditing = true;\n            _this5.div1.setAttribute(\"dir\", \"h\");\n            _this5.border.classList.add(\"border-h\");\n            _this5.div.classList.add(\"cross\");\n            _this5.direction = \"horizontal\";\n            var offsetTop = _this5.getOffsetTop(_this5.div, 0);\n            _this5.div.onmousemove = function (e) {\n                var currentTop = e.clientY - offsetTop;\n                var clientHeight = _this5.div.clientHeight;\n                var topPercent = currentTop / clientHeight;\n                var bottomPercent = 1 - topPercent;\n                _this5.div1.style.height = topPercent * 100 + \"%\";\n                _this5.div2.style.height = bottomPercent * 100 + \"%\";\n            };\n            e.stopPropagation();\n        };\n    };\n\n    Divloop.prototype.verticalEvent = function verticalEvent() {\n        var _this6 = this;\n\n        this.btnVertical.onclick = function (e) {\n            _this6.isEditing = true;\n            _this6.div1.setAttribute(\"dir\", \"v\");\n            _this6.border.classList.add(\"border-v\");\n            _this6.div.classList.add(\"cross\");\n            _this6.direction = \"vertical\";\n            var offsetLeft = _this6.getOffsetLeft(_this6.div, 0);\n            _this6.div.onmousemove = function (e) {\n                var currentLeft = e.clientX - offsetLeft;\n                var clientWidth = _this6.div.clientWidth;\n                var leftPercent = currentLeft / clientWidth;\n                var rightPercent = 1 - leftPercent;\n                _this6.div1.style.width = leftPercent * 100 + \"%\";\n                _this6.div2.style.width = rightPercent * 100 + \"%\";\n            };\n            e.stopPropagation();\n        };\n    };\n\n    Divloop.prototype.divConfirm = function divConfirm() {\n        var _this7 = this;\n\n        this.div.onclick = function (e) {\n            _this7.div.classList.remove(\"cross\");\n            _this7.div.onmousemove = null;\n            if (_this7.isEditing) {\n                _this7.div.onmousemove = null;\n                var color = _this7.randomColor();\n                _this7.div1.style.background = color;\n                _this7.div2.style.background = color;\n                if (_this7.direction == \"vertical\") {\n                    _this7.div1.style.cssFloat = \"left\";\n                    _this7.div2.style.cssFloat = \"left\";\n                }\n                _this7.isEditing = false;\n                var child1 = new Divloop(true);\n                var child2 = new Divloop(true);\n                _this7.child1 = child1;\n                _this7.child2 = child2;\n                child1.parent = _this7;\n                child2.parent = _this7;\n                _this7.div1.appendChild(child1.div);\n                _this7.div2.appendChild(child2.div);\n                _this7.btnVertical.remove();\n                _this7.btnHorizontal.remove();\n\n                _this7.hasChild = true;\n                _this7.btnCancel.style.opacity = \"1\";\n                if (!!_this7.parent) _this7.parent.btnCancel.remove();\n                _this7.cancelEvent();\n            }\n\n            _this7.borderDrag();\n            e.stopPropagation();\n        };\n    };\n\n    Divloop.prototype.randomColor = function randomColor() {\n        return '#' + '0123456789abcdef'.split('').map(function (v, i, a) {\n            return i > 5 ? null : a[Math.floor(Math.random() * 16)];\n        }).join('');\n    };\n\n    return Divloop;\n}();\n\nexports.default = Divloop;\n\n},{\"assert\":3}],2:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = _dereq_('./divloop.js').default;\n\n},{\"./divloop.js\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = _dereq_('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"util/\":7}],4:[function(_dereq_,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],5:[function(_dereq_,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],6:[function(_dereq_,module,exports){\nmodule.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n},{}],7:[function(_dereq_,module,exports){\n(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = _dereq_('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = _dereq_('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n}).call(this,_dereq_('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./support/isBuffer\":6,\"_process\":5,\"inherits\":4}]},{},[2])(2)\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}